#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# This file enumerates the standard Apache Beam expansion services.
# Each service must specify a package destination for each supported SDK, which
# is where generated wrappers will go by default.
#
# Individual transforms can modify their destination module as well as their
# generated wrapper class name.
#
# Transform identifiers listed in the `ignore` field will be skipped.
#
# Any new gradle targets added here should also be added to:
# - sdks/python/test-suites/xlang/build.gradle (look for 'servicesToGenerateFrom')
# - build.gradle.kts (as a dependency in the 'generateExternalTransformWrappers' task)

- gradle_target: 'sdks:java:io:expansion-service:shadowJar'
  destinations:
    python: 'apache_beam/io'
  transforms:
    'beam:schematransform:org.apache.beam:kafka_write:v1':
      name: 'WriteToKafka'
      destinations:
        python: 'apache_beam/io/kafka'
    'beam:schematransform:org.apache.beam:kafka_read:v1':
      name: 'ReadFromKafka'
      destinations:
        python: 'apache_beam/io/kafka'

- gradle_target: 'sdks:java:io:google-cloud-platform:expansion-service:shadowJar'
  destinations:
    python: 'apache_beam/io/gcp'
  transforms:
    'beam:schematransform:org.apache.beam:bigquery_storage_write:v2':
      name: 'StorageWriteToBigQuery'
      destinations:
        python: 'apache_beam/io/gcp/bigquery'
    'beam:schematransform:org.apache.beam:bigquery_storage_read:v1':
      name: 'StorageReadFromBigQuery'
      destinations:
        python: 'apache_beam/io/gcp/bigquery'
    'beam:schematransform:org.apache.beam:bigquery_fileloads_write:v1':
      name: 'FileLoadsToBigQuery'
      destinations:
        python: 'apache_beam/io/gcp/bigquery'
    'beam:schematransform:org.apache.beam:bigquery_export_read:v1':
      name: 'ExportReadFromBigQuery'
      destinations:
        python: 'apache_beam/io/gcp/bigquery'
    'beam:schematransform:org.apache.beam:bigtable_write:v1':
      name: 'WriteToBigtable'
      destinations:
        python: 'apache_beam/io/gcp/bigtable'
    'beam:schematransform:org.apache.beam:bigtable_read:v1':
      name: 'ReadFromBigtable'
      destinations:
        python: 'apache_beam/io/gcp/bigtable'
    'beam:schematransform:org.apache.beam:pubsub_read:v1':
      name: 'ReadFromPubSub'
      destinations:
        python: 'apache_beam/io/gcp/pubsub'
    'beam:schematransform:org.apache.beam:pubsub_write:v1':
      name: 'WriteToPubSub'
      destinations:
        python: 'apache_beam/io/gcp/pubsub'
    'beam:schematransform:org.apache.beam:pubsublite_read:v1':
      name: 'ReadFromPubSubLite'
      destinations:
        python: 'apache_beam/io/gcp/pubsublite'
    'beam:schematransform:org.apache.beam:pubsublite_write:v1':
      name: 'WriteToPubSubLite'
      destinations:
        python: 'apache_beam/io/gcp/pubsublite'
    'beam:schematransform:org.apache.beam:spanner_cdc_read:v1':
      name: 'ReadFromSpannerChangeStreams'
      destinations:
        python: 'apache_beam/io/gcp/spanner'
    'beam:schematransform:org.apache.beam:spanner_write:v1':
      name: 'WriteToSpanner'
      destinations:
        python: 'apache_beam/io/gcp/spanner'
    'beam:schematransform:org.apache.beam:jdbc_write:v1':
      name: 'WriteToJdbc'
      destinations:
        python: 'apache_beam/io/jdbc'
    'beam:schematransform:org.apache.beam:jdbc_read:v1':
      name: 'ReadFromJdbc'
      destinations:
        python: 'apache_beam/io/jdbc'
  ignore:
    # generate_sequence is already included in the Java IO expansion service
    - 'beam:schematransform:org.apache.beam:generate_sequence:v1'
